{"message":"unnecessary parentheses around `if` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6215,"byte_end":6216,"line_start":196,"line_end":196,"column_start":7,"column_end":8,"is_primary":true,"text":[{"text":"    if(mode == \"train\") {CHECK = false;}","highlight_start":7,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models/linear_model.rs","byte_start":6231,"byte_end":6232,"line_start":196,"line_end":196,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    if(mode == \"train\") {CHECK = false;}","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6215,"byte_end":6216,"line_start":196,"line_end":196,"column_start":7,"column_end":8,"is_primary":true,"text":[{"text":"    if(mode == \"train\") {CHECK = false;}","highlight_start":7,"highlight_end":8}],"label":null,"suggested_replacement":" ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\models/linear_model.rs","byte_start":6231,"byte_end":6232,"line_start":196,"line_end":196,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    if(mode == \"train\") {CHECK = false;}","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary parentheses around `if` condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:196:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if(mode == \"train\") {CHECK = false;}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    if\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mmode == \"train\"\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {CHECK = false;}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    if\u001b[0m\u001b[0m\u001b[38;5;10m \u001b[0m\u001b[0mmode == \"train\" {CHECK = false;}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9158,"byte_end":9159,"line_start":283,"line_end":283,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        for i in 0..weights_file_path_List.len() {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9158,"byte_end":9159,"line_start":283,"line_end":283,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        for i in 0..weights_file_path_List.len() {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:283:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for i in 0..weights_file_path_List.len() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"value assigned to `final_result` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10499,"byte_end":10511,"line_start":319,"line_end":319,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                final_result = 0;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `final_result` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:319:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                final_result = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `colsXLen`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10675,"byte_end":10683,"line_start":321,"line_end":321,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10675,"byte_end":10683,"line_start":321,"line_end":321,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"_colsXLen","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `colsXLen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:321:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_colsXLen`\u001b[0m\n\n"}
{"message":"unused variable: `rowsWLen`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10685,"byte_end":10693,"line_start":321,"line_end":321,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10685,"byte_end":10693,"line_start":321,"line_end":321,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":"_rowsWLen","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `rowsWLen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:321:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_rowsWLen`\u001b[0m\n\n"}
{"message":"value assigned to `final_result` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11705,"byte_end":11717,"line_start":345,"line_end":345,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                final_result = 0;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `final_result` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:345:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                final_result = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `colsXLen`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11885,"byte_end":11893,"line_start":347,"line_end":347,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11885,"byte_end":11893,"line_start":347,"line_end":347,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"_colsXLen","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `colsXLen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:347:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_colsXLen`\u001b[0m\n\n"}
{"message":"unused variable: `rowsWLen`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11895,"byte_end":11903,"line_start":347,"line_end":347,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11895,"byte_end":11903,"line_start":347,"line_end":347,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":"_rowsWLen","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `rowsWLen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:347:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_rowsWLen`\u001b[0m\n\n"}
{"message":"variable `nonTarget` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":388,"byte_end":397,"line_start":13,"line_end":13,"column_start":93,"column_end":102,"is_primary":true,"text":[{"text":"fn plot_errors(train_errors: &Vec<f32>, test_errors: &Vec<f32>, index: i32, target: String, nonTarget: String) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":93,"highlight_end":102}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":388,"byte_end":397,"line_start":13,"line_end":13,"column_start":93,"column_end":102,"is_primary":true,"text":[{"text":"fn plot_errors(train_errors: &Vec<f32>, test_errors: &Vec<f32>, index: i32, target: String, nonTarget: String) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":93,"highlight_end":102}],"label":null,"suggested_replacement":"non_target","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `nonTarget` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:13:93\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn plot_errors(train_errors: &Vec<f32>, test_errors: &Vec<f32>, index: i32, target: String, nonTarget: String) -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `non_target`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `colX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":4644,"byte_end":4648,"line_start":142,"line_end":142,"column_start":41,"column_end":45,"is_primary":true,"text":[{"text":"fn load_model_weights(file_path: &Path, colX: i32, rowW: i32) -> io::Result<(Vec<f32>, f32)> {","highlight_start":41,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":4644,"byte_end":4648,"line_start":142,"line_end":142,"column_start":41,"column_end":45,"is_primary":true,"text":[{"text":"fn load_model_weights(file_path: &Path, colX: i32, rowW: i32) -> io::Result<(Vec<f32>, f32)> {","highlight_start":41,"highlight_end":45}],"label":null,"suggested_replacement":"col_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `colX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:142:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn load_model_weights(file_path: &Path, colX: i32, rowW: i32) -> io::Result<(Vec<f32>, f32)> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `col_x`\u001b[0m\n\n"}
{"message":"variable `rowW` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":4655,"byte_end":4659,"line_start":142,"line_end":142,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"fn load_model_weights(file_path: &Path, colX: i32, rowW: i32) -> io::Result<(Vec<f32>, f32)> {","highlight_start":52,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":4655,"byte_end":4659,"line_start":142,"line_end":142,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"fn load_model_weights(file_path: &Path, colX: i32, rowW: i32) -> io::Result<(Vec<f32>, f32)> {","highlight_start":52,"highlight_end":56}],"label":null,"suggested_replacement":"row_w","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowW` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:142:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn load_model_weights(file_path: &Path, colX: i32, rowW: i32) -> io::Result<(Vec<f32>, f32)> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `row_w`\u001b[0m\n\n"}
{"message":"variable `CHECK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6199,"byte_end":6204,"line_start":194,"line_end":194,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let CHECK;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6199,"byte_end":6204,"line_start":194,"line_end":194,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let CHECK;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"check","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `CHECK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:194:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let CHECK;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `check`\u001b[0m\n\n"}
{"message":"variable `weights_file_path_List` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6360,"byte_end":6382,"line_start":203,"line_end":203,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"    let mut weights_file_path_List: Vec<String> = Vec::new();","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6360,"byte_end":6382,"line_start":203,"line_end":203,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"    let mut weights_file_path_List: Vec<String> = Vec::new();","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":"weights_file_path_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `weights_file_path_List` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:203:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut weights_file_path_List: Vec<String> = Vec::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `weights_file_path_list`\u001b[0m\n\n"}
{"message":"variable `target_List` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6767,"byte_end":6778,"line_start":211,"line_end":211,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"    let mut target_List: Vec<String> = Vec::new();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6767,"byte_end":6778,"line_start":211,"line_end":211,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"    let mut target_List: Vec<String> = Vec::new();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"target_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `target_List` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:211:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut target_List: Vec<String> = Vec::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `target_list`\u001b[0m\n\n"}
{"message":"variable `non_target_List` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6959,"byte_end":6974,"line_start":216,"line_end":216,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"    let mut non_target_List: Vec<Vec<String>> = Vec::new();","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":6959,"byte_end":6974,"line_start":216,"line_end":216,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"    let mut non_target_List: Vec<Vec<String>> = Vec::new();","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"non_target_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `non_target_List` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:216:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut non_target_List: Vec<Vec<String>> = Vec::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `non_target_list`\u001b[0m\n\n"}
{"message":"variable `colsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":7768,"byte_end":7776,"line_start":238,"line_end":238,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let (_, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":7768,"byte_end":7776,"line_start":238,"line_end":238,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let (_, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"cols_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `colsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:238:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let (_, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `cols_xlen`\u001b[0m\n\n"}
{"message":"variable `rowsWLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":7778,"byte_end":7786,"line_start":238,"line_end":238,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"        let (_, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":27,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":7778,"byte_end":7786,"line_start":238,"line_end":238,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"        let (_, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":27,"highlight_end":35}],"label":null,"suggested_replacement":"rows_wlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsWLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:238:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let (_, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_wlen`\u001b[0m\n\n"}
{"message":"variable `resultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":8400,"byte_end":8411,"line_start":256,"line_end":256,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut resultCount = HashMap::new();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":8400,"byte_end":8411,"line_start":256,"line_end":256,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut resultCount = HashMap::new();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":"result_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `resultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:256:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut resultCount = HashMap::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `result_count`\u001b[0m\n\n"}
{"message":"variable `rowsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9671,"byte_end":9679,"line_start":301,"line_end":301,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9671,"byte_end":9679,"line_start":301,"line_end":301,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"rows_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:301:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_xlen`\u001b[0m\n\n"}
{"message":"variable `colsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9681,"byte_end":9689,"line_start":301,"line_end":301,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9681,"byte_end":9689,"line_start":301,"line_end":301,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"cols_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `colsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:301:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `cols_xlen`\u001b[0m\n\n"}
{"message":"variable `rowsWLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9691,"byte_end":9699,"line_start":301,"line_end":301,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":9691,"byte_end":9699,"line_start":301,"line_end":301,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":"rows_wlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsWLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:301:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_wlen`\u001b[0m\n\n"}
{"message":"variable `rowsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10665,"byte_end":10673,"line_start":321,"line_end":321,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10665,"byte_end":10673,"line_start":321,"line_end":321,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"rows_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:321:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_xlen`\u001b[0m\n\n"}
{"message":"variable `colsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10675,"byte_end":10683,"line_start":321,"line_end":321,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10675,"byte_end":10683,"line_start":321,"line_end":321,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"cols_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `colsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:321:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `cols_xlen`\u001b[0m\n\n"}
{"message":"variable `rowsWLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10685,"byte_end":10693,"line_start":321,"line_end":321,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":10685,"byte_end":10693,"line_start":321,"line_end":321,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":"rows_wlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsWLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:321:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_wlen`\u001b[0m\n\n"}
{"message":"variable `rowsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11875,"byte_end":11883,"line_start":347,"line_end":347,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11875,"byte_end":11883,"line_start":347,"line_end":347,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":"rows_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:347:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_xlen`\u001b[0m\n\n"}
{"message":"variable `colsXLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11885,"byte_end":11893,"line_start":347,"line_end":347,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11885,"byte_end":11893,"line_start":347,"line_end":347,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"cols_xlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `colsXLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:347:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `cols_xlen`\u001b[0m\n\n"}
{"message":"variable `rowsWLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11895,"byte_end":11903,"line_start":347,"line_end":347,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\models/linear_model.rs","byte_start":11895,"byte_end":11903,"line_start":347,"line_end":347,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":"rows_wlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `rowsWLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models/linear_model.rs:347:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (rowsXLen, colsXLen, rowsWLen) = set_var(&train_features);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `rows_wlen`\u001b[0m\n\n"}
{"message":"27 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 27 warnings emitted\u001b[0m\n\n"}
